use db
db.createCollection('stud')
db.stud.insertMany([
  {
    rno: 1,  // Added roll number
    name: "Pratik",
    marks: 50,
    subject: "TOC"
  },
  {
    rno: 2,  // Added roll number
    name: "Pratik",
    marks: 30,
    subject: "DBMS"
  },
  {
    rno: 3,  // Added roll number
    name: "Pratik",
    marks: 30,
    subject: "CNS"
  },
  {
    rno: 4,  // Added roll number
    name: "Shubham",
    marks: 45,
    subject: "TOC"
  },
  {
    rno: 5,  // Added roll number
    name: "Shubham",
    marks: 30,
    subject: "DBMS"
  },
  {
    rno: 6,  // Added roll number
    name: "Shubham",
    marks: 40,
    subject: "CNS"
  },
  {
    rno: 7,  // Added roll number
    name: "Ram",
    marks: 40,
    subject: "TOC"
  },
  {
    rno: 8,  // Added roll number
    name: "Ram",
    marks: 50,
    subject: "DBMS"
  },
  {
    rno: 9,  // Added roll number
    name: "Ram",
    marks: 40,
    subject: "CNS"
  },
  {
    rno: 10,  // Added roll number
    name: "Sid",
    marks: 50,
    subject: "TOC"
  },
  {
    rno: 11,  // Added roll number
    name: "Sid",
    marks: 20,
    subject: "DBMS"
  },
  {
    rno: 12,  // Added roll number
    name: "Sid",
    marks: 30,
    subject: "CNS"
  }
]);

db.stud.mapReduce(
  function() {
    emit(this.name, this.marks); // Emit the student name and marks
  },
  function(key, values) {
    return Array.sum(values); // Sum the marks for each student
  },
  {
    out: "total_marks_per_student" // Save the result in a new collection
  }
);

db.total_marks_per_student.find();

db.stud.mapReduce(
  function() {
    emit(this.name, 1); // Emit student name with value 1 for each subject
  },
  function(key, values) {
    return Array.sum(values); // Sum the values to count the number of subjects
  },
  {
    out: "subject_count_per_student" // Save the result in a new collection
  }
);

db.subject_count_per_student.find();

db.stud.mapReduce(
  function() {
    emit(this.name, { totalMarks: this.marks, count: 1 });
  },
  function(key, values) {
    var result = { totalMarks: 0, count: 0 };
    values.forEach(function(value) {
      result.totalMarks += value.totalMarks;
      result.count += value.count;
    });
    return result;
  },
  {
    out: "average_marks_per_student" // Save the result in a new collection
  }
);

db.average_marks_per_student.find();

